[{"E:\\University\\Thesis\\dhis2-clone\\src\\App.js":"1","E:\\University\\Thesis\\dhis2-clone\\src\\index.js":"2","E:\\University\\Thesis\\dhis2-clone\\src\\features\\counter\\counterSlice.js":"3","E:\\University\\Thesis\\dhis2-clone\\src\\serviceWorker.js":"4","E:\\University\\Thesis\\dhis2-clone\\src\\store.js":"5","E:\\University\\Thesis\\dhis2-clone\\src\\components\\View.js":"6","E:\\University\\Thesis\\dhis2-clone\\src\\components\\ViewChart.js":"7","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\index.js":"8","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\SuspectedCase.js":"9","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\serviceWorker.js":"10","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\index.js":"11","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\DeathOnConfirmed.js":"12","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\SuspectedCase.js":"13","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\constants\\Account.js":"14","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\App.js":"15","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\index.js":"16","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\store.js":"17","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\features\\counter\\counterSlice.js":"18","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\components\\View.js":"19","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\components\\ViewChart.js":"20","C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\TotalConfirmedProbable.js":"21","E:\\University\\Thesis\\dhis2-clone\\src\\constants\\Account.js":"22","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\ConfirmedProbableCases.js":"23","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\WeeklyDeaths.js":"24","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\ImportedLocalCases.js":"25","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\ConfirmedCasesLast14days.js":"26","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\SingleValueView.js":"27","E:\\University\\Thesis\\dhis2-clone\\src\\constants\\PeriodFilter.js":"28"},{"size":338,"mtime":1612190750209,"results":"29","hashOfConfig":"30"},{"size":704,"mtime":1612190750215,"results":"31","hashOfConfig":"30"},{"size":1551,"mtime":1612190750215,"results":"32","hashOfConfig":"30"},{"size":5141,"mtime":1612190750224,"results":"33","hashOfConfig":"30"},{"size":205,"mtime":1612190750224,"results":"34","hashOfConfig":"30"},{"size":706,"mtime":1614223926005,"results":"35","hashOfConfig":"30"},{"size":10560,"mtime":1612190750211,"results":"36","hashOfConfig":"30"},{"size":8746,"mtime":1614453026832,"results":"37","hashOfConfig":"30"},{"size":10136,"mtime":1613986186687,"results":"38","hashOfConfig":"30"},{"size":5141,"mtime":1608994803228,"results":"39","hashOfConfig":"40"},{"size":12971,"mtime":1611594831408,"results":"41","hashOfConfig":"40"},{"size":3617,"mtime":1611594990145,"results":"42","hashOfConfig":"40"},{"size":17761,"mtime":1612055863230,"results":"43","hashOfConfig":"40"},{"size":119,"mtime":1611907932761,"results":"44","hashOfConfig":"40"},{"size":338,"mtime":1611414362058,"results":"45","hashOfConfig":"40"},{"size":704,"mtime":1609258376275,"results":"46","hashOfConfig":"40"},{"size":205,"mtime":1609258247902,"results":"47","hashOfConfig":"40"},{"size":1551,"mtime":1608994803228,"results":"48","hashOfConfig":"40"},{"size":782,"mtime":1610985961980,"results":"49","hashOfConfig":"40"},{"size":10560,"mtime":1611410204153,"results":"50","hashOfConfig":"40"},{"size":3027,"mtime":1611594957009,"results":"51","hashOfConfig":"40"},{"size":116,"mtime":1613808678869,"results":"52","hashOfConfig":"30"},{"size":7990,"mtime":1614224079171,"results":"53","hashOfConfig":"30"},{"size":7246,"mtime":1614223797897,"results":"54","hashOfConfig":"30"},{"size":7174,"mtime":1613968259820,"results":"55","hashOfConfig":"30"},{"size":7099,"mtime":1614473830508,"results":"56","hashOfConfig":"30"},{"size":6349,"mtime":1614341579831,"results":"57","hashOfConfig":"30"},{"size":101,"mtime":1614277186486,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"bgr5j2",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ih08a",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\University\\Thesis\\dhis2-clone\\src\\App.js",[],["128","129"],"E:\\University\\Thesis\\dhis2-clone\\src\\index.js",[],["130","131"],"E:\\University\\Thesis\\dhis2-clone\\src\\features\\counter\\counterSlice.js",[],["132","133"],"E:\\University\\Thesis\\dhis2-clone\\src\\serviceWorker.js",[],"E:\\University\\Thesis\\dhis2-clone\\src\\store.js",[],["134","135"],"E:\\University\\Thesis\\dhis2-clone\\src\\components\\View.js",[],["136","137"],"E:\\University\\Thesis\\dhis2-clone\\src\\components\\ViewChart.js",["138"],"import React from \"react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n// Resolves charts dependancy\r\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption:\r\n      \"Total confirmed & probable cases (by date of onset of symptoms), last 14 days\",\r\n    yaxisname: \"\",\r\n    subcaption: \"Trainningland\",\r\n    flatscrollbars: \"5\",\r\n    scrollheight: \"10\",\r\n    plottooltext: \" COVID-19 $seriesName $label: <b>$dataValue</b>\",\r\n    theme: \"fusion\",\r\n    //styles\r\n    widthPercent: 5,\r\n    showPlotBorder: true,\r\n    plotSpacePercent: 0,\r\n    labelFontSize: 10,\r\n    chartLeftMargin: \"40\",\r\n    chartTopMargin: \"40\",\r\n    chartRightMargin: \"40\",\r\n    chartBottomMargin: \"40\",\r\n    labelDisplay: \"rotate\",\r\n    slantLabel: \"1\",\r\n    //theme\r\n  },\r\n  categories: [\r\n    {\r\n      category: [\r\n        {\r\n          label: \"2020-02-01\",\r\n        },\r\n        {\r\n          label: \"2020-02-02\",\r\n        },\r\n        {\r\n          label: \"2020-02-03\",\r\n        },\r\n        {\r\n          label: \"2020-02-04\",\r\n        },\r\n        {\r\n          label: \"2020-02-05\",\r\n        },\r\n        {\r\n          label: \"2020-02-06\",\r\n        },\r\n        {\r\n          label: \"2020-02-07\",\r\n        },\r\n        {\r\n          label: \"2020-02-08\",\r\n        },\r\n        {\r\n          label: \"2020-02-09\",\r\n        },\r\n        {\r\n          label: \"2020-02-10\",\r\n        },\r\n        {\r\n          label: \"2020-02-11\",\r\n        },\r\n        {\r\n          label: \"2020-02-12\",\r\n        },\r\n        {\r\n          label: \"2020-02-13\",\r\n        },\r\n        {\r\n          label: \"2020-02-14\",\r\n        },\r\n        {\r\n          label: \"2020-02-15\",\r\n        },\r\n        {\r\n          label: \"2020-02-16\",\r\n        },\r\n        {\r\n          label: \"2020-02-17\",\r\n        },\r\n        {\r\n          label: \"2020-02-18\",\r\n        },\r\n        {\r\n          label: \"2020-02-19\",\r\n        },\r\n        {\r\n          label: \"2020-02-20\",\r\n        },\r\n        {\r\n          label: \"2020-02-21\",\r\n        },\r\n        {\r\n          label: \"2020-02-22\",\r\n        },\r\n        {\r\n          label: \"2020-02-23\",\r\n        },\r\n        {\r\n          label: \"2020-02-24\",\r\n        },\r\n        {\r\n          label: \"2020-02-25\",\r\n        },\r\n        {\r\n          label: \"2020-02-26\",\r\n        },\r\n        {\r\n          label: \"2020-02-27\",\r\n        },\r\n        {\r\n          label: \"2020-02-28\",\r\n        },\r\n        {\r\n          label: \"2020-02-29\",\r\n        },\r\n        {\r\n          label: \"2020-03-01\",\r\n        },\r\n        {\r\n          label: \"2020-03-02\",\r\n        },\r\n        {\r\n          label: \"2020-03-03\",\r\n        },\r\n        {\r\n          label: \"2020-03-05\",\r\n        },\r\n        {\r\n          label: \"2020-03-06\",\r\n        },\r\n        {\r\n          label: \"2020-03-07\",\r\n        },\r\n        {\r\n          label: \"2020-03-08\",\r\n        },\r\n        {\r\n          label: \"2020-03-09\",\r\n        },\r\n        {\r\n          label: \"2020-03-10\",\r\n        },\r\n        {\r\n          label: \"2020-03-11\",\r\n        },\r\n        {\r\n          label: \"2020-03-12\",\r\n        },\r\n        {\r\n          label: \"2020-03-13\",\r\n        },\r\n        {\r\n          label: \"2020-03-14\",\r\n        },\r\n        {\r\n          label: \"2020-03-15\",\r\n        },\r\n        {\r\n          label: \"2020-03-16\",\r\n        },\r\n        {\r\n          label: \"2020-03-17\",\r\n        },\r\n        {\r\n          label: \"2020-03-18\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  dataset: [\r\n    {\r\n      seriesname: \"Laboratory confirmed cases\",\r\n      data: [\r\n        {\r\n          id: \"2020-02-01\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-02\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-03\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-02-04\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-05\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-02-06\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-07\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-08\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-09\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-10\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-11\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-12\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-13\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-14\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-02-15\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-16\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-17\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-02-18\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-19\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-20\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-02-21\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-22\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-23\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-24\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-02-25\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-26\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-27\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-28\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-02-29\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-01\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          id: \"2020-03-02\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-03\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-03-04\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-05\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-06\",\r\n          value: \"3\",\r\n        },\r\n        {\r\n          id: \"2020-03-07\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-08\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          id: \"2020-03-09\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-10\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-03-11\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-12\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-13\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-14\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-15\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-16\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-17\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-18\",\r\n          value: \"0\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      seriesname: \"Probable cases\",\r\n      data: [\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"1\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-17\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-18\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-19\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-20\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-21\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-22\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-23\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-24\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-25\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-26\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-27\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-02-28\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-02-29\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-01\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-03-02\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-03\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-04\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-05\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-06\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-03-07\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-08\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          id: \"2020-03-09\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          id: \"2020-03-10\",\r\n          value: \"3\",\r\n        },\r\n        {\r\n          id: \"2020-03-11\",\r\n          value: \"5\",\r\n        },\r\n        {\r\n          id: \"2020-03-12\",\r\n          value: \"0\",\r\n        },\r\n        {\r\n          id: \"2020-03-13\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-14\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-15\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-16\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-17\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          id: \"2020-03-18\",\r\n          value: \"0\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst chartConfig = {\r\n  type: \"scrollstackedcolumn2d\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  dataFormat: \"json\",\r\n  dataSource,\r\n};\r\n\r\nexport const ViewChart = (props) => {\r\n  return <ReactFC {...props.chartConfig} />;\r\n};\r\n",["139","140"],"E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\index.js",["141","142","143"],"E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\SuspectedCase.js",["144","145","146","147","148"],"import {Fragment, useCallback, useEffect, useState} from \"react\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n// Resolves charts dependencies\nimport axios from \"axios\";\nimport {AccountInfo} from '../../../constants/Account'\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n//URL STUFFS\nconst SUSCASES_METADATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:zCaomudM2hO&dimension=pe:20200101;20200102;20200103;20200104;20200105;20200106;20200107;20200108;20200109;20200110;20200111;20200112;20200113;20200114;20200115;20200116;20200117;20200118;20200119;20200120;20200121;20200122;20200123;20200124;20200125;20200126;20200127;20200128;20200129;20200130;20200131;20200201;20200202;20200203;20200204;20200205;20200206;20200207;20200208;20200209;20200210;20200211;20200212;20200213;20200214;20200215;20200216;20200217;20200218;20200219;20200220;20200221;20200222;20200223;20200224;20200225;20200226;20200227;20200228;20200229;20200301;20200302;20200303;20200304;20200305;20200306;20200307;20200308;20200309;20200310;20200311;20200312;20200313;20200314;20200315;20200316;20200317;20200318;20200319;20200320;20200321;20200322;20200323;20200324;20200325;20200326;20200327;20200328;20200329;20200330;20200331;20200401;20200402;20200403;20200404;20200405;20200406;20200407;20200408;20200409;20200410;20200411;20200412;20200413;20200414;20200415;20200416;20200417;20200418;20200419;20200420;20200421;20200422;20200423;20200424;20200425;20200426;20200427;20200428;20200429;20200430;20200501;20200502;20200503;20200504;20200505;20200506;20200507;20200508;20200509;20200510;20200511;20200512;20200513;20200514;20200515;20200516;20200517;20200518;20200519;20200520;20200521;20200522;20200523;20200524;20200525;20200526;20200527;20200528;20200529;20200530;20200531;20200601;20200602;20200603;20200604;20200605;20200606;20200607;20200608;20200609;20200610;20200611;20200612;20200613;20200614;20200615;20200616;20200617;20200618;20200619;20200620;20200621;20200622;20200623;20200624;20200625;20200626;20200627;20200628;20200629;20200630;20200701;20200702;20200703;20200704&filter=ou:USER_ORGUNIT&skipMeta=false&skipData=true&includeMetadataDetails=true\";\nconst SUSCASES_DESCRIPTION_API = \"https://covid19.dhis2.org/demo/api/31/charts/aVbaqLihI5F?fields=id%2CdisplayName~rename(name)%2CdisplayDescription~rename(description)%2Ccolumns%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Crows%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Cfilters%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2C*%2C!attributeDimensions%2C!attributeValues%2C!category%2C!categoryDimensions%2C!categoryOptionGroupSetDimensions%2C!columnDimensions%2C!dataDimensionItems%2C!dataElementDimensions%2C!dataElementGroupSetDimensions%2C!filterDimensions%2C!itemOrganisationUnitGroups%2C!lastUpdatedBy%2C!organisationUnitGroupSetDimensions%2C!organisationUnitLevels%2C!organisationUnits%2C!programIndicatorDimensions%2C!relativePeriods%2C!reportParams%2C!rowDimensions%2C!series%2C!translations%2C!userOrganisationUnit%2C!userOrganisationUnitChildren%2C!userOrganisationUnitGrandChildren\";\nconst SUSCASES_DATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:zCaomudM2hO&dimension=pe:20200101;20200102;20200103;20200104;20200105;20200106;20200107;20200108;20200109;20200110;20200111;20200112;20200113;20200114;20200115;20200116;20200117;20200118;20200119;20200120;20200121;20200122;20200123;20200124;20200125;20200126;20200127;20200128;20200129;20200130;20200131;20200201;20200202;20200203;20200204;20200205;20200206;20200207;20200208;20200209;20200210;20200211;20200212;20200213;20200214;20200215;20200216;20200217;20200218;20200219;20200220;20200221;20200222;20200223;20200224;20200225;20200226;20200227;20200228;20200229;20200301;20200302;20200303;20200304;20200305;20200306;20200307;20200308;20200309;20200310;20200311;20200312;20200313;20200314;20200315;20200316;20200317;20200318;20200319;20200320;20200321;20200322;20200323;20200324;20200325;20200326;20200327;20200328;20200329;20200330;20200331;20200401;20200402;20200403;20200404;20200405;20200406;20200407;20200408;20200409;20200410;20200411;20200412;20200413;20200414;20200415;20200416;20200417;20200418;20200419;20200420;20200421;20200422;20200423;20200424;20200425;20200426;20200427;20200428;20200429;20200430;20200501;20200502;20200503;20200504;20200505;20200506;20200507;20200508;20200509;20200510;20200511;20200512;20200513;20200514;20200515;20200516;20200517;20200518;20200519;20200520;20200521;20200522;20200523;20200524;20200525;20200526;20200527;20200528;20200529;20200530;20200531;20200601;20200602;20200603;20200604;20200605;20200606;20200607;20200608;20200609;20200610;20200611;20200612;20200613;20200614;20200615;20200616;20200617;20200618;20200619;20200620;20200621;20200622;20200623;20200624;20200625;20200626;20200627;20200628;20200629;20200630;20200701;20200702;20200703;20200704&filter=ou:USER_ORGUNIT&skipData=false&skipMeta=true\";\n\n//NOTE:NEVER USE ASYNC AWAIT IN useEffect\n\nexport const SuspectedCase = (props) => {\n    const [isReady, setReady] = useState(false)\n    const [dataSource, setData] = useState({})\n    const initialDataSource = {\n        chart: {\n            caption: \"\",\n            yaxisname: \"\",\n            subcaption: \"\",\n            plottooltext: \"<sub>$label:</sub> {br} $seriesName <b>$dataValue</b> \",\n            theme: \"fusion\",\n            plotSpacePercent: 50,\n            // divLineAlpha: \"0\",\n            valuePadding: \"5\",\n            showValues: 1,\n            labelFontSize: 13,\n            labelDisplay: \"rotate\",\n            slantLabel: \"1\",\n        },\n        categories: [],\n        dataset: []\n    }\n\n    const chartConfig = {\n        type: \"scrollColumn2d\",\n        width: \"100%\",\n        height: \"100%\",\n        dataFormat: \"json\",\n        dataSource,\n    };\n\n    const chartType = {stack: \"scrollstackedcolumn2d\", single: \"scrollColumn2d\"};\n\n    //ASYNC FUNCTION FOR FETCHING DATA - LABELS - DESCRIPTION\n    const fetchLabels = useCallback(async () => {\n        const data = await axios.get(SUSCASES_METADATA_API, {\n            headers: {\n                // 'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                // 'Authorization': ,\n                withCredentials: true,\n                mode: 'no-cors',\n            },\n            ...AccountInfo\n        })\n        const labelListMetaData = data.data?.metaData?.items\n        let category = []\n        //NOTE KEEP IN MIND THAT YOU SHOULD NEVER USE SETSTATE INSIDE AN HOOK EFFECT\n\n        //NOTE: Sort the object attributes by its key.\n        for (const i in labelListMetaData) {\n            const {dimensionItemType, name, uid} = labelListMetaData[i]\n            if (dimensionItemType === \"PERIOD\") {\n                category = [...category, {label: name}]\n            } else if (dimensionItemType === \"PROGRAM_INDICATOR\") {\n                initialDataSource.dataset.push\n                (\n                    {\n                        seriesname: name,\n                        id: uid,\n                        data: []\n                    }\n                )\n            } else if (dimensionItemType === \"ORGANISATION_UNIT\") {\n                initialDataSource.chart.subcaption = name\n            }\n        }\n\n        initialDataSource.categories.push({category})\n\n    }, [])\n\n    const fetchChartData = useCallback(async () => {\n        const dataResponse = await axios(SUSCASES_DATA_API, {\n            method: 'GET',\n            headers: {\n                // 'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                // 'Authorization': ,\n                withCredentials: true,\n                mode: 'no-cors',\n            },\n            ...AccountInfo\n        })\n\n        const dataListArray = dataResponse.data.rows\n        let idArray = [];\n        dataListArray.forEach(dataList => {\n            //RUN THE CONDITION IN THE FIRST TIME ACCESSING THE ARRAY\n            if (idArray.length === 0) {\n                idArray.push(dataList[0])\n            } else if (!idArray.includes(dataList[0])) {\n                //CHECK IF THE ARRAY HAS THE ID OF CURRENT ARRAY. IF NOT PUSH IT INTO THE ARRAY\n                idArray.push(dataList[0]);\n            }\n            //idArray.indexOf(dataList[0]) to find the index of current array id inside idArray\n            initialDataSource.dataset[idArray.indexOf(dataList[0])].data.push({value: dataList[2]})\n        })\n    }, [])\n\n    const fetchChartMetadata = useCallback(async () => {\n        await axios(SUSCASES_DESCRIPTION_API, {\n            method: 'GET',\n            headers: {\n                // 'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                // 'Authorization': ,\n                withCredentials: true,\n                mode: 'no-cors',\n            },\n            ...AccountInfo\n        }).then(response => {\n            // setMetadata({caption: response.data.name})\n            initialDataSource.chart.caption = response.data.name\n        })\n    }, [])\n\n    //NOTE EFFECT TO CALL ALL THOSE FETCH FUNCTIONS\n    useEffect(() => {\n        const asyncFunction = async () => {\n            await fetchLabels()\n            await fetchChartData()\n            await fetchChartMetadata();\n            setReady(true)\n            setData(initialDataSource)\n        }\n\n        asyncFunction()\n    }, [fetchLabels, fetchChartData, fetchChartMetadata])\n\n    // useEffect(() => {\n    //     console.log(\"Ready state :\", isReady)\n    // }, [dataSource, isReady])\n\n    return (\n        <Fragment>\n            {isReady ? <ReactFC {...chartConfig} /> : <div><h2>Not yet</h2></div>}\n        </Fragment>\n    )\n};",["149","150"],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\serviceWorker.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\index.js",[],["151","152"],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\DeathOnConfirmed.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\SuspectedCase.js",["153","154","155","156","157","158"],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\constants\\Account.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\App.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\index.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\store.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\components\\View.js",[],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\components\\ViewChart.js",["159"],"C:\\Users\\PhucAn\\WebstormProjects\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\TotalConfirmedProbable.js",[],"E:\\University\\Thesis\\dhis2-clone\\src\\constants\\Account.js",[],"E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\ConfirmedProbableCases.js",["160","161","162","163"],"import {Fragment, useCallback, useEffect, useState} from \"react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n// Resolves charts dependencies\r\nimport axios from \"axios\";\r\nimport {AccountInfo} from '../../../constants/Account'\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\r\n\r\n//URL STUFFS\r\nconst SUSCASES_METADATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:zslpvuaEqGP;k4BY4UHodO1&dimension=pe:20200201;20200202;20200203;20200204;20200205;20200206;20200207;20200208;20200209;20200210;20200211;20200212;20200213;20200214;20200215;20200216;20200217;20200218;20200219;20200220;20200221;20200222;20200223;20200224;20200225;20200226;20200227;20200228;20200229;20200301;20200302;20200303;20200304;20200305;20200306;20200307;20200308;20200309;20200310;20200311;20200312;20200313;20200314;20200315;20200316;20200317;20200318;TODAY;LAST_14_DAYS&filter=ou:USER_ORGUNIT&skipMeta=false&skipData=true&includeMetadataDetails=true\";\r\nconst SUSCASES_DESCRIPTION_API = \"https://covid19.dhis2.org/demo/api/31/charts/tLbRZiCLCqC?fields=id%2CdisplayName~rename(name)%2CdisplayDescription~rename(description)%2Ccolumns%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Crows%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Cfilters%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2C*%2C!attributeDimensions%2C!attributeValues%2C!category%2C!categoryDimensions%2C!categoryOptionGroupSetDimensions%2C!columnDimensions%2C!dataDimensionItems%2C!dataElementDimensions%2C!dataElementGroupSetDimensions%2C!filterDimensions%2C!itemOrganisationUnitGroups%2C!lastUpdatedBy%2C!organisationUnitGroupSetDimensions%2C!organisationUnitLevels%2C!organisationUnits%2C!programIndicatorDimensions%2C!relativePeriods%2C!reportParams%2C!rowDimensions%2C!series%2C!translations%2C!userOrganisationUnit%2C!userOrganisationUnitChildren%2C!userOrganisationUnitGrandChildren\";\r\nconst SUSCASES_DATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:k4BY4UHodO1;zslpvuaEqGP&dimension=pe:20200201;20200202;20200203;20200204;20200205;20200206;20200207;20200208;20200209;20200210;20200211;20200212;20200213;20200214;20200215;20200216;20200217;20200218;20200219;20200220;20200221;20200222;20200223;20200224;20200225;20200226;20200227;20200228;20200229;20200301;20200302;20200303;20200304;20200305;20200306;20200307;20200308;20200309;20200310;20200311;20200312;20200313;20200314;20200315;20200316;20200317;20200318;LAST_14_DAYS;TODAY&filter=ou:USER_ORGUNIT&skipData=false&skipMeta=true\";\r\n\r\n//NOTE:NEVER USE ASYNC AWAIT IN useEffect\r\n\r\n//TODO CHECK THE ORDERS OF DATA WHICH IS CURRENTLY REVERSED\r\nexport const ConfirmedProbableCases = (props) => {\r\n    const [isReady, setReady] = useState(false)\r\n    const [dataSource, setData] = useState({})\r\n    const initialDataSource = {\r\n        chart: {\r\n            caption: \"\",\r\n            yaxisname: \"\",\r\n            subcaption: \"\",\r\n            plottooltext: \"<sub>$label:</sub> {br} $seriesName <b>$dataValue</b> \",\r\n            theme: \"fusion\",\r\n            plotSpacePercent: 50,\r\n            // divLineAlpha: \"0\",\r\n            valuePadding: \"5\",\r\n            labelFontSize: 13,\r\n            labelDisplay: \"rotate\",\r\n            slantLabel: \"1\",\r\n            numDivLines: 0,\r\n        },\r\n        categories: [],\r\n        dataset: []\r\n    }\r\n\r\n    const chartConfig = {\r\n        type: \"stackedColumn2d\",\r\n        width: \"100%\",\r\n        height: \"50%\",\r\n        dataFormat: \"json\",\r\n        dataSource,\r\n    };\r\n\r\n    // const chartType = {stack: \"scrollstackedcolumn2d\", single: \"scrollColumn2d\"};\r\n\r\n    //ASYNC FUNCTION FOR FETCHING DATA - LABELS - DESCRIPTION\r\n    const fetchLabels = useCallback(async () => {\r\n        const data = await axios.get(SUSCASES_METADATA_API, {\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        })\r\n        const labelListMetaData = data.data?.metaData?.items\r\n        let category = []\r\n        // console.log(labelListMetaData)\r\n        //NOTE: KEEP IN MIND THAT YOU SHOULD NEVER USE SETSTATE INSIDE AN HOOK EFFECT\r\n\r\n        //NOTE: Sort the object attributes by its key.\r\n        for (const i in labelListMetaData) {\r\n            const {dimensionItemType, name, uid} = labelListMetaData[i]\r\n            if (dimensionItemType === \"PERIOD\") {\r\n                category = [...category, {label: name}]\r\n            } else if (dimensionItemType === \"PROGRAM_INDICATOR\") {\r\n                initialDataSource.dataset.push\r\n                (\r\n                    {\r\n                        seriesname: name,\r\n                        id: uid,\r\n                        data: []\r\n                    }\r\n                )\r\n            } else if (dimensionItemType === \"ORGANISATION_UNIT\") {\r\n                initialDataSource.chart.subcaption = name\r\n            }\r\n        }\r\n\r\n        initialDataSource.categories.push({category})\r\n    }, [])\r\n\r\n    const fetchChartData = useCallback(async () => {\r\n        const dataResponse = await axios(SUSCASES_DATA_API, {\r\n            method: 'GET',\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        })\r\n        const dataListArray = dataResponse.data.rows\r\n        let idArray = [];\r\n        dataListArray.forEach(dataList => {\r\n            //RUN THE CONDITION IN THE FIRST TIME ACCESSING THE ARRAY\r\n            if (idArray.length === 0) {\r\n                idArray.push(dataList[0])\r\n            } else if (!idArray.includes(dataList[0])) {\r\n                //CHECK IF THE ARRAY HAS THE ID OF CURRENT ARRAY. IF NOT PUSH IT INTO THE ARRAY\r\n                idArray.push(dataList[0]);\r\n                console.log(idArray)\r\n            }\r\n            //idArray.indexOf(dataList[0]) to find the index of current array id inside idArray\r\n            initialDataSource.dataset[idArray.indexOf(dataList[0])].data.push({value: dataList[2]})\r\n        })\r\n    }, [])\r\n\r\n    const fetchChartMetadata = useCallback(async () => {\r\n        await axios(SUSCASES_DESCRIPTION_API, {\r\n            method: 'GET',\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        }).then(response => {\r\n            // setMetadata({caption: response.data.name})\r\n            initialDataSource.chart.caption = response.data.name\r\n        })\r\n    }, [])\r\n\r\n    //NOTE EFFECT TO CALL ALL THOSE FETCH FUNCTIONS\r\n    useEffect(() => {\r\n        const asyncFunction = async () => {\r\n            await fetchLabels()\r\n            await fetchChartData()\r\n            await fetchChartMetadata();\r\n            setReady(true)\r\n            setData(initialDataSource)\r\n        }\r\n\r\n        asyncFunction()\r\n    }, [fetchLabels, fetchChartData, fetchChartMetadata])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(dataSource)\r\n    // }, [dataSource, isReady])\r\n\r\n    return (\r\n        <Fragment>\r\n            {isReady ? <ReactFC {...chartConfig} /> : <div><h2>Not yet</h2></div>}\r\n        </Fragment>\r\n    )\r\n};","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\WeeklyDeaths.js",["164","165","166","167","168"],"import {Fragment, useCallback, useEffect, useState} from \"react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n// Resolves charts dependencies\r\nimport axios from \"axios\";\r\nimport {AccountInfo} from '../../../constants/Account'\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\r\n\r\n//URL STUFFS\r\nconst SUSCASES_METADATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:laofi1xaiKS;we4K5ImBBNN&dimension=pe:LAST_12_WEEKS&filter=ou:USER_ORGUNIT&skipMeta=false&skipData=true&includeMetadataDetails=true\";\r\nconst SUSCASES_DESCRIPTION_API = \"https://covid19.dhis2.org/demo/api/31/charts/FtOWDLvTR4L?fields=id%2CdisplayName~rename(name)%2CdisplayDescription~rename(description)%2Ccolumns%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Crows%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Cfilters%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2C*%2C!attributeDimensions%2C!attributeValues%2C!category%2C!categoryDimensions%2C!categoryOptionGroupSetDimensions%2C!columnDimensions%2C!dataDimensionItems%2C!dataElementDimensions%2C!dataElementGroupSetDimensions%2C!filterDimensions%2C!itemOrganisationUnitGroups%2C!lastUpdatedBy%2C!organisationUnitGroupSetDimensions%2C!organisationUnitLevels%2C!organisationUnits%2C!programIndicatorDimensions%2C!relativePeriods%2C!reportParams%2C!rowDimensions%2C!series%2C!translations%2C!userOrganisationUnit%2C!userOrganisationUnitChildren%2C!userOrganisationUnitGrandChildren\";\r\nconst SUSCASES_DATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:laofi1xaiKS;we4K5ImBBNN&dimension=pe:LAST_12_WEEKS&filter=ou:USER_ORGUNIT&skipData=false&skipMeta=true\";\r\n\r\n//NOTE:NEVER USE ASYNC AWAIT IN useEffect\r\n\r\nexport const WeeklyDeaths = (props) => {\r\n    const [isReady, setReady] = useState(false)\r\n    const [dataSource, setData] = useState({})\r\n    const initialDataSource = {\r\n        chart: {\r\n            caption: \"\",\r\n            yaxisname: \"\",\r\n            subcaption: \"\",\r\n            plottooltext: \"<sub>$label:</sub> {br} $seriesName <b>$dataValue</b> \",\r\n            theme: \"fusion\",\r\n            plotSpacePercent: 50,\r\n            // divLineAlpha: \"0\",\r\n            showXAxisLine: 0,\r\n            showYAxisLine: 0,\r\n            valuePadding: \"5\",\r\n            labelFontSize: 13,\r\n            formatNumber: 0,\r\n        },\r\n        categories: [],\r\n        dataset: []\r\n    }\r\n\r\n    const chartConfig = {\r\n        type: \"stackedColumn2d\",\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n        dataFormat: \"json\",\r\n        dataSource,\r\n    };\r\n\r\n    const chartType = {stack: \"scrollstackedcolumn2d\", single: \"scrollColumn2d\"};\r\n\r\n    //ASYNC FUNCTION FOR FETCHING DATA - LABELS - DESCRIPTION\r\n    const fetchLabels = useCallback(async () => {\r\n        const data = await axios.get(SUSCASES_METADATA_API, {\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        })\r\n        const labelListMetaData = data.data?.metaData?.items\r\n        let category = []\r\n        //NOTE: KEEP IN MIND THAT YOU SHOULD NEVER USE SETSTATE INSIDE AN HOOK EFFECT\r\n\r\n        //NOTE: Sort the object attributes by its key.\r\n        const sortedLabelList = Object.keys(labelListMetaData).sort().reduce(\r\n            (obj, key) => {\r\n                obj[key] = labelListMetaData[key];\r\n                return obj\r\n            },\r\n            {}\r\n        )\r\n\r\n        for (const i in sortedLabelList) {\r\n            const {dimensionItemType, name, uid} = sortedLabelList[i]\r\n            if (dimensionItemType === \"PERIOD\") {\r\n                category = [...category, {label: name}]\r\n            } else if (dimensionItemType === \"PROGRAM_INDICATOR\") {\r\n                initialDataSource.dataset.push\r\n                (\r\n                    {\r\n                        seriesname: name,\r\n                        id: uid,\r\n                        data: []\r\n                    }\r\n                )\r\n            } else if (dimensionItemType === \"ORGANISATION_UNIT\") {\r\n                initialDataSource.chart.subcaption = name\r\n            }\r\n        }\r\n\r\n        initialDataSource.categories.push({category})\r\n\r\n    }, [])\r\n\r\n    const fetchChartData = useCallback(async () => {\r\n        const dataResponse = await axios(SUSCASES_DATA_API, {\r\n            method: 'GET',\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        })\r\n        const dataListArray = dataResponse.data.rows\r\n        let idArray = [];\r\n        dataListArray.forEach(dataList => {\r\n            //RUN THE CONDITION IN THE FIRST TIME ACCESSING THE ARRAY\r\n            if (idArray.length === 0) {\r\n                idArray.push(dataList[0])\r\n            } else if (!idArray.includes(dataList[0])) {\r\n                //CHECK IF THE ARRAY HAS THE ID OF CURRENT ARRAY. IF NOT PUSH IT INTO THE ARRAY\r\n                idArray.push(dataList[0]);\r\n                // console.log(idArray)\r\n            }\r\n            //idArray.indexOf(dataList[0]) to find the index of current array id inside idArray\r\n            initialDataSource.dataset[idArray.indexOf(dataList[0])].data.push({value: dataList[2]})\r\n        })\r\n    }, [])\r\n\r\n    const fetchChartMetadata = useCallback(async () => {\r\n        await axios(SUSCASES_DESCRIPTION_API, {\r\n            method: 'GET',\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        }).then(response => {\r\n            // setMetadata({caption: response.data.name})\r\n            initialDataSource.chart.caption = response.data.name\r\n        })\r\n    }, [])\r\n\r\n    //NOTE EFFECT TO CALL ALL THOSE FETCH FUNCTIONS\r\n    useEffect(() => {\r\n        const asyncFunction = async () => {\r\n            await fetchLabels()\r\n            await fetchChartData()\r\n            await fetchChartMetadata();\r\n            setReady(true)\r\n            setData(initialDataSource)\r\n        }\r\n\r\n        asyncFunction()\r\n    }, [fetchLabels, fetchChartData, fetchChartMetadata])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(dataSource)\r\n    // }, [dataSource, isReady])\r\n\r\n    return (\r\n        <Fragment>\r\n            {isReady ? <ReactFC {...chartConfig} /> : <div><h2>Not yet</h2></div>}\r\n        </Fragment>\r\n    )\r\n};","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\ImportedLocalCases.js",["169","170","171","172","173"],"import {Fragment, useCallback, useEffect, useState} from \"react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n// Resolves charts dependencies\r\nimport axios from \"axios\";\r\nimport {AccountInfo} from '../../../constants/Account'\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\r\n\r\n//URL STUFFS\r\nconst SUSCASES_METADATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:cJ9jP3kr3DD;z833oDG8Wpw;PirI9DDiTt6&dimension=pe:LAST_12_WEEKS&filter=ou:USER_ORGUNIT&skipMeta=false&skipData=true&includeMetadataDetails=true\";\r\nconst SUSCASES_DESCRIPTION_API = \"https://covid19.dhis2.org/demo/api/31/charts/bm3tzkAPSaN?fields=id%2CdisplayName~rename(name)%2CdisplayDescription~rename(description)%2Ccolumns%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Crows%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2Cfilters%5Bdimension%2ClegendSet%5Bid%5D%2Cfilter%2CprogramStage%2Citems%5BdimensionItem~rename(id)%2CdisplayName~rename(name)%2CdimensionItemType%5D%5D%2C*%2C!attributeDimensions%2C!attributeValues%2C!category%2C!categoryDimensions%2C!categoryOptionGroupSetDimensions%2C!columnDimensions%2C!dataDimensionItems%2C!dataElementDimensions%2C!dataElementGroupSetDimensions%2C!filterDimensions%2C!itemOrganisationUnitGroups%2C!lastUpdatedBy%2C!organisationUnitGroupSetDimensions%2C!organisationUnitLevels%2C!organisationUnits%2C!programIndicatorDimensions%2C!relativePeriods%2C!reportParams%2C!rowDimensions%2C!series%2C!translations%2C!userOrganisationUnit%2C!userOrganisationUnitChildren%2C!userOrganisationUnitGrandChildren\";\r\nconst SUSCASES_DATA_API = \"https://covid19.dhis2.org/demo/api/31/analytics.json?dimension=dx:PirI9DDiTt6;cJ9jP3kr3DD;z833oDG8Wpw&dimension=pe:LAST_12_WEEKS&filter=ou:USER_ORGUNIT&skipData=false&skipMeta=true\";\r\n\r\n//NOTE:NEVER USE ASYNC AWAIT IN useEffect\r\n\r\nexport const ImportedLocalCases = (props) => {\r\n    const [isReady, setReady] = useState(false)\r\n    const [dataSource, setData] = useState({})\r\n    const initialDataSource = {\r\n        chart: {\r\n            caption: \"\",\r\n            yaxisname: \"\",\r\n            subcaption: \"\",\r\n            plottooltext: \"<sub>$label:</sub> {br} $seriesName <b>$dataValue</b> \",\r\n            theme: \"fusion\",\r\n            plotSpacePercent: 50,\r\n            // divLineAlpha: \"0\",\r\n            showValues: 1,\r\n            showXAxisLine: 0,\r\n            showYAxisLine: 0,\r\n            valuePadding: \"5\",\r\n            labelFontSize: 13,\r\n        },\r\n        categories: [],\r\n        dataset: []\r\n    }\r\n\r\n    const chartConfig = {\r\n        type: \"stackedColumn2d\",\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n        dataFormat: \"json\",\r\n        dataSource,\r\n    };\r\n\r\n    const chartType = {stack: \"scrollstackedcolumn2d\", single: \"scrollColumn2d\"};\r\n\r\n    //ASYNC FUNCTION FOR FETCHING DATA - LABELS - DESCRIPTION\r\n    const fetchLabels = useCallback(async () => {\r\n        const data = await axios.get(SUSCASES_METADATA_API, {\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        })\r\n        const labelListMetaData = data.data?.metaData?.items\r\n        let category = []\r\n        //NOTE KEEP IN MIND THAT YOU SHOULD NEVER USE SETSTATE INSIDE AN HOOK EFFECT\r\n        const sortedLabelList = Object.keys(labelListMetaData).sort().reduce(\r\n            (obj, key) => {\r\n                obj[key] = labelListMetaData[key];\r\n                return obj\r\n            },\r\n            {}\r\n        )\r\n\r\n        for (const i in sortedLabelList) {\r\n            const {dimensionItemType, name, uid} = sortedLabelList[i]\r\n            if (dimensionItemType === \"PERIOD\") {\r\n                category = [...category, {label: name}]\r\n            } else if (dimensionItemType === \"PROGRAM_INDICATOR\") {\r\n                initialDataSource.dataset.push\r\n                (\r\n                    {\r\n                        seriesname: name,\r\n                        id: uid,\r\n                        data: []\r\n                    }\r\n                )\r\n            } else if (dimensionItemType === \"ORGANISATION_UNIT\") {\r\n                initialDataSource.chart.subcaption = name\r\n            }\r\n        }\r\n\r\n        initialDataSource.categories.push({category})\r\n\r\n    }, [])\r\n\r\n    const fetchChartData = useCallback(async () => {\r\n        const dataResponse = await axios(SUSCASES_DATA_API, {\r\n            method: 'GET',\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        })\r\n        const dataListArray = dataResponse.data.rows\r\n        let idArray = [];\r\n        dataListArray.forEach(dataList => {\r\n            //RUN THE CONDITION IN THE FIRST TIME ACCESSING THE ARRAY\r\n            if (idArray.length === 0) {\r\n                idArray.push(dataList[0])\r\n            } else if (!idArray.includes(dataList[0])) {\r\n                //CHECK IF THE ARRAY HAS THE ID OF CURRENT ARRAY. IF NOT PUSH IT INTO THE ARRAY\r\n                idArray.push(dataList[0]);\r\n            }\r\n            //idArray.indexOf(dataList[0]) to find the index of current array id inside idArray\r\n            initialDataSource.dataset[idArray.indexOf(dataList[0])].data.push({value: dataList[2]})\r\n        })\r\n    }, [])\r\n\r\n    const fetchChartMetadata = useCallback(async () => {\r\n        await axios(SUSCASES_DESCRIPTION_API, {\r\n            method: 'GET',\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': ,\r\n                withCredentials: true,\r\n                mode: 'no-cors',\r\n            },\r\n            ...AccountInfo\r\n        }).then(response => {\r\n            // setMetadata({caption: response.data.name})\r\n            initialDataSource.chart.caption = response.data.name\r\n        })\r\n    }, [])\r\n\r\n    //NOTE EFFECT TO CALL ALL THOSE FETCH FUNCTIONS\r\n    useEffect(() => {\r\n        const asyncFunction = async () => {\r\n            await fetchLabels()\r\n            await fetchChartData()\r\n            await fetchChartMetadata();\r\n            setReady(true)\r\n            setData(initialDataSource)\r\n        }\r\n\r\n        asyncFunction()\r\n    }, [fetchLabels, fetchChartData, fetchChartMetadata])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(dataSource)\r\n    // }, [dataSource, isReady])\r\n\r\n    return (\r\n        <Fragment>\r\n            {isReady ? <ReactFC {...chartConfig} /> : <div><h2>Not yet</h2></div>}\r\n        </Fragment>\r\n    )\r\n};","E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\ConfirmedCasesLast14days.js",["174","175","176","177"],"E:\\University\\Thesis\\dhis2-clone\\src\\pages\\Dashboard\\DashboardComponents\\SingleValueView.js",["178","179","180","181"],"E:\\University\\Thesis\\dhis2-clone\\src\\constants\\PeriodFilter.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"182","replacedBy":"188"},{"ruleId":"184","replacedBy":"189"},{"ruleId":"182","replacedBy":"190"},{"ruleId":"184","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":550,"column":7,"nodeType":"196","messageId":"197","endLine":550,"endColumn":18},{"ruleId":"182","replacedBy":"198"},{"ruleId":"184","replacedBy":"199"},{"ruleId":"194","severity":1,"message":"200","line":1,"column":16,"nodeType":"196","messageId":"197","endLine":1,"endColumn":24},{"ruleId":"194","severity":1,"message":"201","line":1,"column":26,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"202","line":38,"column":7,"nodeType":"196","messageId":"197","endLine":38,"endColumn":16},{"ruleId":"194","severity":1,"message":"202","line":49,"column":11,"nodeType":"196","messageId":"197","endLine":49,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":88,"column":8,"nodeType":"205","endLine":88,"endColumn":10,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"207","line":116,"column":8,"nodeType":"205","endLine":116,"endColumn":10,"suggestions":"208"},{"ruleId":"203","severity":1,"message":"209","line":133,"column":8,"nodeType":"205","endLine":133,"endColumn":10,"suggestions":"210"},{"ruleId":"203","severity":1,"message":"211","line":146,"column":8,"nodeType":"205","endLine":146,"endColumn":57,"suggestions":"212"},{"ruleId":"182","replacedBy":"213"},{"ruleId":"184","replacedBy":"214"},{"ruleId":"182","replacedBy":"215"},{"ruleId":"184","replacedBy":"216"},{"ruleId":"194","severity":1,"message":"202","line":376,"column":7,"nodeType":"196","messageId":"197","endLine":376,"endColumn":16},{"ruleId":"194","severity":1,"message":"217","line":390,"column":12,"nodeType":"196","messageId":"197","endLine":390,"endColumn":19},{"ruleId":"194","severity":1,"message":"218","line":390,"column":21,"nodeType":"196","messageId":"197","endLine":390,"endColumn":31},{"ruleId":"203","severity":1,"message":"219","line":424,"column":31,"nodeType":"196","endLine":424,"endColumn":42},{"ruleId":"203","severity":1,"message":"219","line":442,"column":28,"nodeType":"196","endLine":442,"endColumn":39},{"ruleId":"203","severity":1,"message":"220","line":462,"column":8,"nodeType":"205","endLine":462,"endColumn":21,"suggestions":"221"},{"ruleId":"194","severity":1,"message":"195","line":550,"column":7,"nodeType":"196","messageId":"197","endLine":550,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":89,"column":8,"nodeType":"205","endLine":89,"endColumn":10,"suggestions":"222"},{"ruleId":"203","severity":1,"message":"207","line":117,"column":8,"nodeType":"205","endLine":117,"endColumn":10,"suggestions":"223"},{"ruleId":"203","severity":1,"message":"209","line":134,"column":8,"nodeType":"205","endLine":134,"endColumn":10,"suggestions":"224"},{"ruleId":"203","severity":1,"message":"211","line":147,"column":8,"nodeType":"205","endLine":147,"endColumn":57,"suggestions":"225"},{"ruleId":"194","severity":1,"message":"202","line":49,"column":11,"nodeType":"196","messageId":"197","endLine":49,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":96,"column":8,"nodeType":"205","endLine":96,"endColumn":10,"suggestions":"226"},{"ruleId":"203","severity":1,"message":"207","line":124,"column":8,"nodeType":"205","endLine":124,"endColumn":10,"suggestions":"227"},{"ruleId":"203","severity":1,"message":"209","line":141,"column":8,"nodeType":"205","endLine":141,"endColumn":10,"suggestions":"228"},{"ruleId":"203","severity":1,"message":"211","line":154,"column":8,"nodeType":"205","endLine":154,"endColumn":57,"suggestions":"229"},{"ruleId":"194","severity":1,"message":"202","line":49,"column":11,"nodeType":"196","messageId":"197","endLine":49,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":94,"column":8,"nodeType":"205","endLine":94,"endColumn":10,"suggestions":"230"},{"ruleId":"203","severity":1,"message":"207","line":121,"column":8,"nodeType":"205","endLine":121,"endColumn":10,"suggestions":"231"},{"ruleId":"203","severity":1,"message":"209","line":138,"column":8,"nodeType":"205","endLine":138,"endColumn":10,"suggestions":"232"},{"ruleId":"203","severity":1,"message":"211","line":151,"column":8,"nodeType":"205","endLine":151,"endColumn":57,"suggestions":"233"},{"ruleId":"203","severity":1,"message":"204","line":90,"column":8,"nodeType":"205","endLine":90,"endColumn":10,"suggestions":"234"},{"ruleId":"203","severity":1,"message":"207","line":117,"column":8,"nodeType":"205","endLine":117,"endColumn":10,"suggestions":"235"},{"ruleId":"203","severity":1,"message":"209","line":134,"column":8,"nodeType":"205","endLine":134,"endColumn":10,"suggestions":"236"},{"ruleId":"203","severity":1,"message":"211","line":147,"column":8,"nodeType":"205","endLine":147,"endColumn":57,"suggestions":"237"},{"ruleId":"203","severity":1,"message":"238","line":60,"column":8,"nodeType":"205","endLine":60,"endColumn":10,"suggestions":"239"},{"ruleId":"203","severity":1,"message":"240","line":75,"column":8,"nodeType":"205","endLine":75,"endColumn":10,"suggestions":"241"},{"ruleId":"203","severity":1,"message":"242","line":93,"column":8,"nodeType":"205","endLine":93,"endColumn":10,"suggestions":"243"},{"ruleId":"203","severity":1,"message":"211","line":106,"column":8,"nodeType":"205","endLine":106,"endColumn":57,"suggestions":"244"},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],["245"],["246"],["245"],["246"],["245"],["246"],["245"],["246"],"no-unused-vars","'chartConfig' is assigned a value but never used.","Identifier","unusedVar",["245"],["246"],"'useState' is defined but never used.","'useMemo' is defined but never used.","'chartType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'initialDataSource.categories', 'initialDataSource.chart', and 'initialDataSource.dataset'. Either include them or remove the dependency array.","ArrayExpression",["247"],"React Hook useCallback has a missing dependency: 'initialDataSource.dataset'. Either include it or remove the dependency array.",["248"],"React Hook useCallback has a missing dependency: 'initialDataSource.chart'. Either include it or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'initialDataSource'. Either include it or remove the dependency array.",["250"],["245"],["246"],["245"],["246"],"'dataSet' is assigned a value but never used.","'setDataSet' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'fetchChartCaption' and 'fetchChartData'. Either include them or remove the dependency array.",["251"],["252"],["253"],["254"],["255"],["256"],["257"],["258"],["259"],["260"],["261"],["262"],["263"],["264"],["265"],["266"],["267"],"React Hook useCallback has missing dependencies: 'METADATA_API' and 'initialDataSource'. Either include them or remove the dependency array.",["268"],"React Hook useCallback has missing dependencies: 'DATA_API' and 'initialDataSource'. Either include them or remove the dependency array.",["269"],"React Hook useCallback has missing dependencies: 'DESCRIPTION_API' and 'initialDataSource'. Either include them or remove the dependency array.",["270"],["271"],"no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"272","fix":"282"},{"desc":"274","fix":"283"},{"desc":"276","fix":"284"},{"desc":"278","fix":"285"},{"desc":"272","fix":"286"},{"desc":"274","fix":"287"},{"desc":"276","fix":"288"},{"desc":"278","fix":"289"},{"desc":"272","fix":"290"},{"desc":"274","fix":"291"},{"desc":"276","fix":"292"},{"desc":"278","fix":"293"},{"desc":"272","fix":"294"},{"desc":"274","fix":"295"},{"desc":"276","fix":"296"},{"desc":"278","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"278","fix":"304"},"Update the dependencies array to be: [initialDataSource.categories, initialDataSource.chart, initialDataSource.dataset]",{"range":"305","text":"306"},"Update the dependencies array to be: [initialDataSource.dataset]",{"range":"307","text":"308"},"Update the dependencies array to be: [initialDataSource.chart]",{"range":"309","text":"310"},"Update the dependencies array to be: [fetchLabels, fetchChartData, fetchChartMetadata, initialDataSource]",{"range":"311","text":"312"},"Update the dependencies array to be: [fetchChartCaption, fetchChartData, fetchLabels]",{"range":"313","text":"314"},{"range":"315","text":"306"},{"range":"316","text":"308"},{"range":"317","text":"310"},{"range":"318","text":"312"},{"range":"319","text":"306"},{"range":"320","text":"308"},{"range":"321","text":"310"},{"range":"322","text":"312"},{"range":"323","text":"306"},{"range":"324","text":"308"},{"range":"325","text":"310"},{"range":"326","text":"312"},{"range":"327","text":"306"},{"range":"328","text":"308"},{"range":"329","text":"310"},{"range":"330","text":"312"},"Update the dependencies array to be: [METADATA_API, initialDataSource]",{"range":"331","text":"332"},"Update the dependencies array to be: [DATA_API, initialDataSource]",{"range":"333","text":"334"},"Update the dependencies array to be: [DESCRIPTION_API, initialDataSource]",{"range":"335","text":"336"},{"range":"337","text":"312"},[7765,7767],"[initialDataSource.categories, initialDataSource.chart, initialDataSource.dataset]",[8905,8907],"[initialDataSource.dataset]",[9495,9497],"[initialDataSource.chart]",[9833,9882],"[fetchLabels, fetchChartData, fetchChartMetadata, initialDataSource]",[17534,17547],"[fetchChartCaption, fetchChartData, fetchLabels]",[5528,5530],[6732,6734],[7339,7341],[7690,7739],[4781,4783],[5988,5990],[6595,6597],[6946,6995],[4750,4752],[5916,5918],[6523,6525],[6874,6923],[4675,4677],[5841,5843],[6448,6450],[6799,6848],[3856,3858],"[METADATA_API, initialDataSource]",[4374,4376],"[DATA_API, initialDataSource]",[5032,5034],"[DESCRIPTION_API, initialDataSource]",[5379,5428]]